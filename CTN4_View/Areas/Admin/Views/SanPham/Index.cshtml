@*@model IEnumerable<CTN4_Data.Models.DB_CTN4.SanPham>*@
@model X.PagedList.IPagedList<CTN4_Data.Models.DB_CTN4.SanPham>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<br></br>
<br></br>
<br></br>


<h1>Quản lý sản phẩm</h1>

<p>
    <button type="button" class="btn btn-warning btn-fw editable-click=" asp-action="Create"><a asp-action="Create" style="color:white">Thêm</a></button>

</p>
@using (Html.BeginForm("Index", "SanPham", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group">
        <label for="TenSp" class="mr-2">Danh sách sản phẩm</label>
        <input type="text" class="form-control" placeholder="Tên sản phẩm" name="TenSp">
    </div>

    <div class="form-group ml-3">
        <label for="tu" class="mr-2">Giá niêm yết từ</label>
        <input type="number" class="form-control" name="tu" />
        <span class="mr-2">đến</span>
        <input type="number" class="form-control" name="den" />
    </div>

    <div class="form-group ml-3">
        <button type="submit" class="btn btn-outline-secondary">Tìm kiếm</button>
    </div>
} <script>
      $(function () {
          var slider = $("#slider");
          slider.slider({
              range: true,
              min: 0,
              max: 1000, // Thay đổi giới hạn theo nhu cầu của bạn
              values: [0, 1000], // Giá trị mặc định ban đầu
              slide: function (event, ui) {
                  $("#price-range").text("$" + ui.values[0] + " - $" + ui.values[1]);
              }
          });
      });
</script>
</br>
<table class="table">
    <thead>
        <tr>
            <th>
                Mã sản phẩm
            </th>
            <th>
                Tên sản phẩm
            </th>
            <th>
                Chất liệu
            </th>
            <th>
                Nsx
            </th>
            <th>
                Mô tả
            </th>
            <th>
                Giá nhập
            </th>
            <th>
                Giá bán
            </th>
            <th>
                Giá niên yết
            </th>
            <th>
                Ghi chú
            </th>
            <th>
                Trạng thái
            </th>
            <th>
                Tình trạng sản phẩm
            </th>
            <th>
                Ảnh đại diện
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MaSp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TenSanPham)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChatLieu.TenChatLieu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NSX.TenNSX)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoTa)
                </td>
                <td>
                    @Html.Raw(FormatCurrency(item.GiaNhap))
                </td>
                <td>
                    @Html.Raw(FormatCurrency(item.GiaBan))
                </td>
                <td>
                    @Html.Raw(FormatCurrency(item.GiaNiemYet))

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GhiChu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TrangThai)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Is_detele)
                </td>
                <td>
                    <tb>
                        @if (System.IO.Path.GetExtension(item.AnhDaiDien) == ".jpg" ||
                       System.IO.Path.GetExtension(item.AnhDaiDien) == ".png" ||
                       System.IO.Path.GetExtension(item.AnhDaiDien) == ".jpeg" ||
                       System.IO.Path.GetExtension(item.AnhDaiDien) == ".tiff" ||
                       System.IO.Path.GetExtension(item.AnhDaiDien) == ".webp" ||
                       System.IO.Path.GetExtension(item.AnhDaiDien) == ".gif")
                        {
                            <img src="~/image/@item.AnhDaiDien" height="100">
                        }
                        else
                        {
                            <a>ảnh lỗi</a>
                        }
                    </tb>
                </td>
                <td>
                    <button class="btn btn-success m-1">
                        @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.Id }, new { style = "color: white;" })
                    </button>
                    <button class="btn btn-info m-1">
                        @Html.ActionLink("Xem chi tiết", "Details", new { id = item.Id }, new { style = "color: white;" })
                    </button>
                    <button class="btn btn-danger m-1">
                        @Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new { style = "color: white;" })
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row no-gutters justify-content-between paginate">
    <div class="col-auto ">
       @* @using (Html.BeginForm("Index", "SanPham", FormMethod.Get))
        {
            <p>
                Kích thước trang: @Html.DropDownList("size", (List<SelectListItem>)ViewBag.size, new { @onchange = "this.form.submit();" })
            </p>
        }*@
    </div>
    <div class="col-auto">
        <div class="row no-gutters align-items-center">
            <div class="col-auto mr-3">
                <span style="color: rgb(128, 128, 128);">Tổng:<span id="id">@Model.Count()</span></span>
            </div>
            <div class="col">
                <div class="pagination-container">
                    <ul class="pagination">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, size = ViewBag.currentSize })">Previous</a>
                            </li>
                        }

                        @for (var i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, size = ViewBag.currentSize })">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, size = ViewBag.currentSize })">Next</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
                </div>
<script>
    @functions {
        public string FormatCurrency(float price)
        {
            string formattedPrice = string.Format("{0:N0}", price); // Định dạng số và thêm dấu phân cách ngàn
            return formattedPrice + "₫"; // Thêm ký hiệu đồng (₫) vào cuối
        }
    };

        });


</script>
<style>
    form {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    div {
        margin-bottom: 10px;
    }

    input {
        width: 100%; /* Chiều rộng 100% */
        box-sizing: border-box; /* Bao gồm cả padding và border vào chiều rộng */
        margin-bottom: 5px; /* Khoảng cách dưới */
    }

    button {
        margin-left: 5px;
    }
</style>
