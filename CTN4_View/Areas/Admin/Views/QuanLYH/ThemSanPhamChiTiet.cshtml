@model CTN4_Serv.ViewModel.SanPhamChiTietView
@{
    ViewData["Title"] = "ThemSanPhamChiTiet";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>ThemSanPhamChiTiet</h1>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<div class="row">
    <div class="col-md-9">
        <br></br>
        <div>
            <h1>Sản Phẩm</h1>
            <hr />
            @* <dl class="row">
            <dt class="col-sm-2">
            <h3>Tên sản phẩm</h3>
            </dt>
            <dd class="col-sm-10">
            <h3>@Model.</h3>
            </dd>

            </dl>*@
        </div>

    </div>
</div>
<table class="table">
    <form method="post" asp-action="ThemSanPham" enctype="multipart/form-data" onsubmit="return validateForm();">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="SoLuong" class="control-label">Số lượng</label>
            <input asp-for="SoLuong" class="form-control" />
            <span asp-validation-for="SoLuong" class="text-danger" id="soLuongError"></span>
        </div>

        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="TrangThai" /> @Html.DisplayNameFor(model => model.TrangThai)
            </label>
        </div>


        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="Is_detele" /> @Html.DisplayNameFor(model => model.Is_detele)
            </label>
        </div>

        <div class="form-group">
            <label asp-for="IdMau">Màu sắc</label>
            <select asp-for="IdMau" class="form-control" id="mauSelect">
                <option value="">-- Chọn màu --</option>
                @foreach (var a in Model.MauItems)
                {
                    <option value="@a.Value">@a.Text</option>
                }
            </select>
            <span asp-validation-for="IdMau" class="text-danger" id="mauError"></span>
        </div>

        <div class="form-group">
            <label asp-for="IdSize">Size</label>
            <select asp-for="IdSize" class="form-control" id="sizeSelect" >
                <option value="">-- Chọn size --</option>
                @foreach (var a in Model.SizeItems)
                {
                    <option value="@a.Value">@a.Text</option>
                }
            </select>
            <span asp-validation-for="IdSize" class="text-danger" id="sizeError"></span>
        </div>
        @if (TempData["sussces"] != null)
        {
            <div class="alert alert-info">@TempData["ErrorMessage"]</div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        <br />
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary"  />
            <input type="hidden" name="IdSp" value="@Model.IdSp" />
        </div>
    </form>

</table>
<div>
    <a>@Html.ActionLink("Quay lại", "details","SanPham", new {id = Model.IdSp }, new { style="text-decoration: none;color: black;" }) </a>

</div>
<script>
    function validateForm() {
        var result = true; // Biến để kiểm tra xem có nên hiển thị confirm hay không

        // Kiểm tra và hiển thị thông báo lỗi cho số lượng
        var soLuongValue = document.getElementById("SoLuong").value;
        var errorSoLuongSpan = document.getElementById("soLuongError");

        validateSoLuong(soLuongValue, errorSoLuongSpan);

        // Kiểm tra và hiển thị thông báo lỗi cho IdMau
        var selectedMauValue = document.getElementById("mauSelect").value;
        var errorMauSpan = document.getElementById("mauError");

        if (selectedMauValue === "") {
            errorMauSpan.innerText = "Vui lòng chọn một giá trị cho Màu sắc.";
            result = false; // Đặt result thành false nếu có lỗi
        } else {
            errorMauSpan.innerText = ""; // Xóa thông báo lỗi nếu hợp lệ
        }

        // Kiểm tra và hiển thị thông báo lỗi cho IdSize
        var selectedSizeValue = document.getElementById("sizeSelect").value;
        var errorSizeSpan = document.getElementById("sizeError");

        if (selectedSizeValue === "") {
            errorSizeSpan.innerText = "Vui lòng chọn một giá trị cho Size.";
            result = false; // Đặt result thành false nếu có lỗi
        } else {
            errorSizeSpan.innerText = ""; // Xóa thông báo lỗi nếu hợp lệ
        }

        // Hiển thị confirm khi không có lỗi
        if (result) {
            result = confirm("Bạn có chắc muốn chỉnh sửa sản phẩm này không?");
        }

        return result;
    }

    function validateSoLuong(value, errorElement) {
        // Kiểm tra không được để trống
        if (value === '') {
            errorElement.innerText = 'Không được để trống';
            return false;
        }

        // Kiểm tra có phải là số không âm hay không
        if (!/^\d+$/.test(value) || parseInt(value, 10) < 0) {
            errorElement.innerText = 'Chỉ được nhập số không âm';
            return false;
        }

        // Kiểm tra số lượng lớn hơn 1
        if (parseInt(value, 10) <= 1) {
            errorElement.innerText = 'Số lượng phải lớn hơn 1';
            return false;
        }

        // Nếu tất cả các kiểm tra đều qua, xóa thông báo lỗi
        errorElement.innerText = '';
        return true;
    }
</script>